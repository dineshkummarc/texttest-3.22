# We run with command-line PyUseCase (no instrumentation assumed)
interpreter:storytext -l config -i gtk

# Settings for creation of test cases
use_case_record_mode:GUI

[run_dependent_text]
outputdyn2:process ID is{WORD -1}
targetConfig:{INTERNAL writedir}{REPLACE <test write dir>}
# PyGTK 2.10 bug, can't be bothered to work round it in the code as it's already fixed
errors:IA__g_object_remove_toggle_ref: could{LINES 2}
errors:^$
# Don't show the entire path!
dynamic_gui_log:^PATH=.*{REPLACE PATH=<path>}
dynamic_gui_log:{INTERNAL writedir}{REPLACE <test write dir>}
dynamic_gui_log:[^/]*[0-9]{2}[A-Za-z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
*gui_log:+ PID{WORD 3}
*gui_log:[0-9][0-9][A-Za-z][a-z][a-z][0-9][0-9]:[0-9][0-9]:[0-9][0-9]{REPLACE <date/time>}
*gui_log:TextTest source directory{LINES 2}{REPLACE <TextTest source info>}
*gui_log:^\'TextTest:\' \| [^ ]*${WORD -1}{REPLACE '<version>'}
*gui_log:^\'Python:\' \| [^ ]*${WORD -1}{REPLACE '<version>'}
*gui_log:>TextTest ([^ <]*)</span>${REPLACE >TextTest <version></span>} 
*gui_log:view a file of size [0-9]* bytes{REPLACE view a file of size <file size> bytes}
dynamic_gui_log:Adding entry completion 'Marked at{WORD -2}{REPLACE <date and time>}
dynamic_gui_log:Running on{WORD -1}{REPLACE <machine>}
dynamic_gui_log:result files on{WORD -1}{REPLACE <machine>}
dynamic_gui_log:succeeded on{WORD -1}{REPLACE <machine>}
dynamic_gui_log:FAILED on{WORD -2}{REPLACE <machine>}
dynamic_gui_log:not be run on{WORD -2}{REPLACE <machine>}
dynamic_gui_log:^(Reckoned to be )[^ ]*{REPLACE \1<percent>}
dynamic_gui_log:^\([0-9]* seconds?{REPLACE (<elapsed time>}
dynamic_gui_log:at [0-3][0-9]:[0-6][0-9]{REPLACE at <time of day>}
dynamic_gui_log:From log file reckoned
dynamic_gui_log:seconds on{WORD -1}
# Unfortunately race conditions mean we can't reliably look at these
dynamic_gui_log:Temporary Files
# Traffic tests. Can't filter them there because then we can't tell when they're different...
dynamic_gui_log:The time is now{WORD 5+}{REPLACE <ASCII time>}
dynamic_gui_log:The process ID is{WORD -1}{REPLACE <pid>}
dynamic_gui_log:[^ ]*texttest\.py{REPLACE <path_to_texttest>}
dynamic_gui_log:[0-9]{2}[A-Za-z][a-z][a-z][0-9]{6}{REPLACE <date string>}
dynamic_gui_log:Killing.*Xvfb process{WORD -1}
dynamic_gui_log:Killing running test{WORD -1}
gui_log:{INTERNAL writedir}{REPLACE <test write dir>}
gui_log:Viewing page 'from 3\.[1-3][0-9]'{->}---------------
gui_log:Viewing page 'trunk'{->}---------------
gui_log:Viewing page 'Quick Start'{->}---------------
gui_log:[^/]*[0-9]{2}[A-Za-z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
gui_log:  File "
gui_log:\'([A-Za-z]:)?/[^ ]*/log/logging.debug{REPLACE '<path_to_texttest>/log/logging.debug}
# diff output
dynamic_gui_log:1,2c1
jusecaseprops:{INTERNAL writedir}{REPLACE <test write dir>}
jusecaseprops:[^/]*[0-9]{2}[A-Za-z][a-z][a-z][0-9]{6}\.[0-9]*{REPLACE <target tmp dir>}
targetKnownbugs:\[Reported by.*at{WORD 3}{REPLACE <user>}
targetKnownbugs:\[Reported by.*at{WORD 5}{REPLACE <date/time>}

[unordered_text]
# start in the background, so order can be changed
externalmocks:CMD:tkdiff
externalmocks:CMD:emacs
externalmocks:CMD:xterm

[failure_severity]
*gui_log:1
[end]

# Files that are internal details of PyGTK
# we don't care if they change but we need them in a unique
# place to avoid clashes
test_data_ignore:gtk_recently_used
test_data_ignore:xdg_config_home

link_test_path:usecase_for_targetapp
link_test_path:storytext

[test_data_environment]
usecase_for_targetapp:USECASE_FAKE_REPLAY_SCRIPT
storytext:STORYTEXT_HOME

[collate_file]
targetConfig:TargetApp/config.*
targetEnv:TargetApp/*/environment*
targetOptions:TargetApp/*/options*
outputdyn:texttesttmp/*/dynamic_run1/output.log
outputdyn2:texttesttmp/*/dynamic_run2/output.log
outputdyn3:texttesttmp/*/dynamic_run3/output.log
gui_select:texttesttmp/*/dynamic_run1/gui_select
gui_select_rerun:texttesttmp/*/dynamic_run1/*/gui_select
gui_select2:texttesttmp/*/dynamic_run2/gui_select
gui_select3:texttesttmp/*/dynamic_run3/gui_select
jusecaseprops:texttesttmp/*/*/*/jusecase.properties
filter*:TargetApp/filter_files/filter*

[definition_file_stems]
regenerate:*usecase
