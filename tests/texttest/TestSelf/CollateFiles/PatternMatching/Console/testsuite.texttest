# Test that UNIX-style pattern matching can be used in the target files
TargetPattern

# Make sure that patterns in the target name are respected and that no special handling of suffices is present
TargetPatternNaming

# Test of bad configuration
NewFiles

# Check that collating occurs before discarding so we can rename things
CollateAndDiscard

# Try collating everything via a completely general pattern
CollateAllAtOnce

# If an empty string matches "*", how is this substituted?
EmptyStringMatches

# What happens if we only have wildcards on the target side?
UnmatchedWildcard

# Make sure expansions not present in first test are still created for second test
ExpandInSecondTest

# Check we can specify multiple paths to source from
MultipleSources

# Check we find the right files when the collated names are substrings of each other
CollateNameSubstring

# See what happens if the test name contains glob characters
TestWithGlobName

# Copy of NewFiles -but collate to create. etc.
BadCollateName

# Shouldn't allow path separators either
BadCollateName2

# If files existed before, don't collate them
DontCollateInput

# Test that we can use specified scripts in a pipeline to collate a file indirectly
CollateScripts

# If the collate script doesn't write anything, treat that as a rejection and don't produce an empty file
CollateScriptRejectsInput

# Test that we get sensible error messages if a non-existent collate script gets given
BadCollateScript

# Test that we get sensible error messages if the non-existent script comes first
BadCollateScript2

# Make sure errors from collate_scripts turn up somewhere they can easily be seen
CollateScriptErrors

# Tests for collating files written in subdirectories
FromSubDir
