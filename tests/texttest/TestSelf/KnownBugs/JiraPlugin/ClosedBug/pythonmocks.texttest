<-PYT:import xmlrpclib
<-PYT:xmlrpclib.ServerProxy('http://www.myjirasite.com/rpc/xmlrpc')
->RET:Instance('ServerProxy', 'serverproxy1')
<-PYT:serverproxy1.jira1.login('texttest', 'password')
->RET:'37pIc4zep5'
<-PYT:serverproxy1.jira1.getIssue('37pIc4zep5', 'FAK-42')
->RET:{'affectsVersions': [],
 'assignee': 'santaclaus',
 'attachmentNames': 'rednose.mp3',
 'components': [{'name': 'Medical', 'id': '10768'}],
 'created': '2009-06-09 08:47:29.0',
 'customFieldValues': [],
 'description': 'Rudolf the red-nosed reindeer\r\nHad a very shiny nose\r\n',
 'environment': 'Foo version 1.00 (40)\r\nBar version version 1.00 (20)',
 'fixVersions': [],
 'id': '25014',
 'key': 'FAK-42',
 'priority': '3',
 'project': 'FAK',
 'reporter': 'rudolf',
 'resolution': '2',
 'status': '6',
 'summary': 'I have a red nose',
 'type': '1', 
 'updated': '2009-06-15 09:58:58.0',
 'votes': '1'
}
<-PYT:serverproxy1.jira1.getStatuses('37pIc4zep5')
->RET:[{'description': 'The issue is open and ready for the assignee to start work on it.',
  'icon': 'http://jira.atlassian.com/images/icons/status_open.gif',
  'id': '1',
  'name': 'Open'},
 {'description': 'This issue is being actively worked on at the moment by the assignee.',
  'icon': 'http://jira.atlassian.com/images/icons/status_inprogress.gif',
  'id': '3',
  'name': 'In Progress'},
 {'description': 'This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.',
  'icon': 'http://jira.atlassian.com/images/icons/status_reopened.gif',
  'id': '4',
  'name': 'Reopened'},
 {'description': 'A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.',
  'icon': 'http://jira.atlassian.com/images/icons/status_resolved.gif',
  'id': '5',
  'name': 'Resolved'},
 {'description': 'The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.',
  'icon': 'http://jira.atlassian.com/images/icons/status_closed.gif',
  'id': '6',
  'name': 'Closed'}]
<-PYT:serverproxy1.jira1.getResolutions('37pIc4zep5')
->RET:[{'description': 'A fix for this issue is checked into the tree and tested.',
  'id': '1',
  'name': 'Fixed'},
 {'description': 'The problem described is an issue which will never be fixed.',
  'id': '2',
  'name': "Won't Fix"},
 {'description': 'The problem is a duplicate of an existing issue.',
  'id': '3',
  'name': 'Duplicate'},
 {'description': 'The problem is not completely described.',
  'id': '4',
  'name': 'Incomplete'}]
