# Cruft that python logging module needs...
[loggers]
keys=root,action runner,activator,application,batch collect,catalogues,check for bugs,check for crashes,collate files,environment creator,file view gui,filecomparison,filter actions,find applications,generatewebpages,generatewebpages,gui log,gui notebook,idle handlers,interactive actions,locks,mail sender,makeperformance,menu bar,multientrydictionary,observable,option finder,prepare writedir,progress monitor,queue system submit,read environment,reconnection,run dependent text,run test,save repository,select tests,slave server,standard log,test column gui,test objects,test tree,testcomparison,testpathfilter,traffic replay,traffic server,unique names,use-case log,virtual display

[handlers]
keys=root,stdout,action runner,activator,application,batch collect,catalogues,check for bugs,check for crashes,collate files,environment creator,file view gui,filecomparison,filter actions,find applications,generatewebpages,generatewebpages,gui log,gui notebook,idle handlers,interactive actions,locks,mail sender,makeperformance,menu bar,multientrydictionary,observable,option finder,prepare writedir,progress monitor,queue system submit,read environment,reconnection,run dependent text,run test,save repository,select tests,slave server,standard log,test column gui,test objects,test tree,testcomparison,testpathfilter,traffic replay,traffic server,unique names,use-case log,virtual display

[formatters]
keys=timed,debug

[logger_root]
handlers=root

[handler_root]
class=StreamHandler
level=WARNING
args=(sys.stdout,)

[handler_stdout]
class=StreamHandler
args=(sys.stdout,)
formatter=debug

[formatter_timed]
format=%(asctime)s - %(message)s

[formatter_debug]
format=%(name)s %(levelname)s - %(message)s

# ====== The following are disabled by default ======
# ======= Section for action runner ======
[logger_action runner]
handlers=action runner
qualname=action runner
level=INFO

[handler_action runner]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
args=('%(TEXTTEST_PERSONAL_LOG)s/actionrunner.diag', 'w')

# ======= Section for activator ======
[logger_activator]
handlers=activator
qualname=activator
#level=INFO

[handler_activator]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/activator.diag', 'w')

# ======= Section for application ======
[logger_application]
handlers=application
qualname=application
#level=INFO

[handler_application]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/application.diag', 'w')

# ======= Section for batch collect ======
[logger_batch collect]
handlers=batch collect
qualname=batch collect
#level=INFO

[handler_batch collect]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/batchcollect.diag', 'w')

# ======= Section for catalogues ======
[logger_catalogues]
handlers=catalogues
qualname=catalogues
#level=INFO

[handler_catalogues]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/catalogues.diag', 'w')

# ======= Section for check for bugs ======
[logger_check for bugs]
handlers=check for bugs
qualname=check for bugs
#level=INFO

[handler_check for bugs]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/checkforbugs.diag', 'w')

# ======= Section for check for crashes ======
[logger_check for crashes]
handlers=check for crashes
qualname=check for crashes
#level=INFO

[handler_check for crashes]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/checkforcrashes.diag', 'w')

# ======= Section for collate files ======
[logger_collate files]
handlers=collate files
qualname=collate files
#level=INFO

[handler_collate files]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/collatefiles.diag', 'w')

# ======= Section for environment creator ======
[logger_environment creator]
handlers=environment creator
qualname=environment creator
#level=INFO

[handler_environment creator]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/environmentcreator.diag', 'w')

# ======= Section for file view gui ======
[logger_file view gui]
handlers=file view gui
qualname=file view gui
#level=INFO

[handler_file view gui]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/fileviewgui.diag', 'w')

# ======= Section for filecomparison ======
[logger_filecomparison]
handlers=filecomparison
qualname=filecomparison
level=INFO

[handler_filecomparison]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
args=('%(TEXTTEST_PERSONAL_LOG)s/filecomparison.diag', 'w')

# ======= Section for filter actions ======
[logger_filter actions]
handlers=filter actions
qualname=filter actions
#level=INFO

[handler_filter actions]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/filteractions.diag', 'w')

# ======= Section for find applications ======
[logger_find applications]
handlers=find applications
qualname=find applications
#level=INFO

[handler_find applications]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/findapplications.diag', 'w')

# ======= Section for generatewebpages ======
[logger_generatewebpages]
handlers=generatewebpages
qualname=generatewebpages
#level=INFO

[handler_generatewebpages]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/generatewebpages.diag', 'w')

# ======= Section for generatewebpages ======
[logger_generatewebpages]
handlers=generatewebpages
qualname=generatewebpages
#level=INFO

[handler_generatewebpages]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/generatewebpages.diag', 'w')

# ======= Section for gui log ======
[logger_gui log]
handlers=gui log
qualname=gui log
#level=INFO

[handler_gui log]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/guilog.diag', 'w')

# ======= Section for gui notebook ======
[logger_gui notebook]
handlers=gui notebook
qualname=gui notebook
#level=INFO

[handler_gui notebook]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/guinotebook.diag', 'w')

# ======= Section for idle handlers ======
[logger_idle handlers]
handlers=idle handlers
qualname=idle handlers
#level=INFO

[handler_idle handlers]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/idlehandlers.diag', 'w')

# ======= Section for interactive actions ======
[logger_interactive actions]
handlers=interactive actions
qualname=interactive actions
#level=INFO

[handler_interactive actions]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/interactiveactions.diag', 'w')

# ======= Section for locks ======
[logger_locks]
handlers=locks
qualname=locks
#level=INFO

[handler_locks]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/locks.diag', 'w')

# ======= Section for mail sender ======
[logger_mail sender]
handlers=mail sender
qualname=mail sender
#level=INFO

[handler_mail sender]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/mailsender.diag', 'w')

# ======= Section for makeperformance ======
[logger_makeperformance]
handlers=makeperformance
qualname=makeperformance
#level=INFO

[handler_makeperformance]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/makeperformance.diag', 'w')

# ======= Section for menu bar ======
[logger_menu bar]
handlers=menu bar
qualname=menu bar
#level=INFO

[handler_menu bar]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/menubar.diag', 'w')

# ======= Section for multientrydictionary ======
[logger_multientrydictionary]
handlers=multientrydictionary
qualname=multientrydictionary
#level=INFO

[handler_multientrydictionary]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/multientrydictionary.diag', 'w')

# ======= Section for observable ======
[logger_observable]
handlers=observable
qualname=observable
#level=INFO

[handler_observable]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/observable.diag', 'w')

# ======= Section for option finder ======
[logger_option finder]
handlers=option finder
qualname=option finder
#level=INFO

[handler_option finder]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/optionfinder.diag', 'w')

# ======= Section for prepare writedir ======
[logger_prepare writedir]
handlers=prepare writedir
qualname=prepare writedir
#level=INFO

[handler_prepare writedir]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/preparewritedir.diag', 'w')

# ======= Section for progress monitor ======
[logger_progress monitor]
handlers=progress monitor
qualname=progress monitor
#level=INFO

[handler_progress monitor]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/progressmonitor.diag', 'w')

# ======= Section for queue system submit ======
[logger_queue system submit]
handlers=queue system submit
qualname=queue system submit
#level=INFO

[handler_queue system submit]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/queuesystemsubmit.diag', 'w')

# ======= Section for read environment ======
[logger_read environment]
handlers=read environment
qualname=read environment
#level=INFO

[handler_read environment]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/readenvironment.diag', 'w')

# ======= Section for reconnection ======
[logger_reconnection]
handlers=reconnection
qualname=reconnection
#level=INFO

[handler_reconnection]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/reconnection.diag', 'w')

# ======= Section for run dependent text ======
[logger_run dependent text]
handlers=run dependent text
qualname=run dependent text
level=INFO

[handler_run dependent text]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
args=('%(TEXTTEST_PERSONAL_LOG)s/rundependenttext.diag', 'w')

# ======= Section for run test ======
[logger_run test]
handlers=run test
qualname=run test
#level=INFO

[handler_run test]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/runtest.diag', 'w')

# ======= Section for save repository ======
[logger_save repository]
handlers=save repository
qualname=save repository
#level=INFO

[handler_save repository]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/saverepository.diag', 'w')

# ======= Section for select tests ======
[logger_select tests]
handlers=select tests
qualname=select tests
#level=INFO

[handler_select tests]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/selecttests.diag', 'w')

# ======= Section for slave server ======
[logger_slave server]
handlers=slave server
qualname=slave server
#level=INFO

[handler_slave server]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/slaveserver.diag', 'w')

# ======= Section for standard log ======
[logger_standard log]
handlers=stdout
qualname=standard log
level=INFO

[handler_standard log]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/standardlog.diag', 'w')

# ======= Section for test column gui ======
[logger_test column gui]
handlers=test column gui
qualname=test column gui
#level=INFO

[handler_test column gui]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/testcolumngui.diag', 'w')

# ======= Section for test objects ======
[logger_test objects]
handlers=test objects
qualname=test objects
#level=INFO

[handler_test objects]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/testobjects.diag', 'w')

# ======= Section for test tree ======
[logger_test tree]
handlers=test tree
qualname=test tree
#level=INFO

[handler_test tree]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/testtree.diag', 'w')

# ======= Section for testcomparison ======
[logger_testcomparison]
handlers=testcomparison
qualname=testcomparison
level=INFO

[handler_testcomparison]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
args=('%(TEXTTEST_PERSONAL_LOG)s/testcomparison.diag', 'w')

# ======= Section for testpathfilter ======
[logger_testpathfilter]
handlers=testpathfilter
qualname=testpathfilter
#level=INFO

[handler_testpathfilter]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/testpathfilter.diag', 'w')

# ======= Section for traffic replay ======
[logger_traffic replay]
handlers=traffic replay
qualname=traffic replay
#level=INFO

[handler_traffic replay]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/trafficreplay.diag', 'w')

# ======= Section for traffic server ======
[logger_traffic server]
handlers=traffic server
qualname=traffic server
#level=INFO

[handler_traffic server]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/trafficserver.diag', 'w')

# ======= Section for unique names ======
[logger_unique names]
handlers=unique names
qualname=unique names
#level=INFO

[handler_unique names]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/uniquenames.diag', 'w')

# ======= Section for use-case log ======
[logger_use-case log]
handlers=use-case log
qualname=use-case log
#level=INFO

[handler_use-case log]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/use-caselog.diag', 'w')

# ======= Section for virtual display ======
[logger_virtual display]
handlers=virtual display
qualname=virtual display
#level=INFO

[handler_virtual display]
class=FileHandler
#formatter=timed
args=('/dev/null', 'w')
#args=('%(TEXTTEST_PERSONAL_LOG)s/virtualdisplay.diag', 'w')

