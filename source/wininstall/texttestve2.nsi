; Script generated by the HM NIS Edit Script Wizard.
SetCompressor lzma

; MUI 1.67 compatible ------
!include "MUI2.nsh"
!include "FileFunc.nsh"

!include "ZipDLL.nsh"
!include "EnvVarUpdate.nsh"

; ------------ TextTest settings ---------
!define PRODUCT_NAME "TextTest"
!ifndef PRODUCT_VERSION
  !define PRODUCT_VERSION ""
!endif
!define PRODUCT_PUBLISHER "TextTest"
!define PRODUCT_WEB_SITE "http://www.texttest.org"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\AppMainExe.exe"

Var TT_HOME
Var ROOT_DRIVE
Var PYTHON_PATH
Var JYTHON_PATH
Var VIRTUALENV_PATH
Var TKDIFF_PATH
Var JAVA_EXE
;Var WINMERGE_PATH

!define env_hkcu 'HKCU "Environment"'
!define env_hklm 'HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"'
!define TT_BIN "source\bin"

!ifdef WIN64
  !define ARCH "win64"
!else
  !define ARCH "win32"
!endif

!ifdef JEPPESEN
  !define CENTRAL_STORYTEXT_LOCATION "T:\texttest\release\current.win\storytext"
  !define CENTRAL_TEXTTEST_LOCATION "T:\texttest\release\current.win"
!else
  !ifndef TEXTTEST_ROOT
    !define TEXTTEST_ROOT "texttest-3.21"
  !endif
  !ifndef TEXTTEST_DIST
    !define TEXTTEST_DIST "${TEXTTEST_ROOT}.zip"
  !endif
!endif

!ifndef VIRTUALENV_DIST
  !define VIRTUALENV_DIST "virtualenv.py"
!endif
!ifndef PYTHON_VERSION
  !DEFINE PYTHON_VERSION "2.6"
!endif
!ifndef JYTHON_VERSION
  !DEFINE JYTHON_VERSION "2.5.2"
!endif

!ifndef VIRTUAL_PYTHON
  !define VIRTUAL_PYTHON "python${PYTHON_VERSION}"
!endif
!ifndef VIRTUAL_JYTHON
  !define VIRTUAL_JYTHON "jython${JYTHON_VERSION}"
!endif

!ifndef PYTHON_INSTALLER
  !define PYTHON_INSTALLER "python-2.6.6.msi"
!endif
!ifndef JYTHON_INSTALLER
  !define JYTHON_INSTALLER "jython_installer-2.5.2.jar"
!endif
!ifndef PYGTK_INSTALLER
  !define PYGTK_INSTALLER "pygtk-all-in-one-2.22.6.win32-py2.6.msi"
!endif

!ifndef TKDIFF_INSTALLER
  !define TKDIFF_INSTALLER "tkdiffInstall.exe"
!endif
/*
!ifndef WINMERGE_INSTALLER
  !define WINMERGE_INSTALLER "WinMerge-2.12.4-exe.zip"
!endif
*/

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"

; Welcome page
;!define MUI_WELCOMEPAGE_TITLE "Please Note:"
LangString WELCOME_TEXT ${LANG_ENGLSH} "This wizard will guide you through the installation of TextTest.$\r$\n$\r$\n \
Click Next to continue.$\r$\n"
!define MUI_WELCOMEPAGE_TEXT "$(WELCOME_TEXT)"
;!define MUI_WELCOMEPAGE_TITLE_3LINES
!insertmacro MUI_PAGE_WELCOME

; Components page
!insertmacro MUI_PAGE_COMPONENTS

; Directory page
!ifndef JEPPESEN
LangString TEXT_TOP ${LANG_ENGLSH} "Setup will install \
TextTest in the following folder..."
!define MUI_DIRECTORYPAGE_TEXT_TOP "$(TEXT_TOP)"
;!DEFINE MUI_DIRECTORYPAGE_VARIABLE $INSTDIR
!insertmacro MUI_PAGE_DIRECTORY
!endif

; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Texttest home page
PageEx directory
  DirVerify leave
  DirText "Select a root directory to store TextTest tests. This will set the environment variable TEXTTEST_HOME."
  DirVar $TT_HOME
PageExEnd
; Finish page
!define MUI_FINISHPAGE_SHOWREADME ""
!define MUI_FINISHPAGE_SHOWREADME_CHECKED
!define MUI_FINISHPAGE_SHOWREADME_TEXT "Create start menu and desktop shortcuts"
!define MUI_FINISHPAGE_SHOWREADME_FUNCTION makeShortcuts
!insertmacro MUI_PAGE_FINISH

; Language files
!insertmacro MUI_LANGUAGE "English"
; Reserve files
;!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
BrandingText " "
RequestExecutionLevel user
Caption "${PRODUCT_NAME}"
!ifdef JEPPESEN
  OutFile "texttext-all-in-one${PRODUCT_VERSION}.${ARCH}.jeppesen.exe"
!else
  OutFile "texttext-all-in-one${PRODUCT_VERSION}.${ARCH}.exe"
!endif
InstallDir "C:\TextTest"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails hide

!macro SETUP_MACRO un
  Function ${un}setup
    ${GetRoot} "$PROGRAMFILES" $ROOT_DRIVE
    StrCpy $INSTDIR "$ROOT_DRIVE\${PRODUCT_NAME}"
    StrCpy $JYTHON_PATH "$ROOT_DRIVE\jython${JYTHON_VERSION}"
    StrCpy $VIRTUALENV_PATH "$ROOT_DRIVE\virtualenv"
    StrCpy $TKDIFF_PATH "$PROGRAMFILES\TkDiff"
    ;StrCpy $WINMERGE_PATH "$ROOT_DRIVE\WinMerge-2.12.4-exe"
    StrCpy $TT_HOME "$ROOT_DRIVE\Tests"
  FunctionEnd
!macroend

!insertmacro SETUP_MACRO ""
!insertmacro SETUP_MACRO "un."

Section -SETTINGS
  SetOutPath $TEMP\texttest
  SetOverwrite ifnewer
  Call initialize
  ifErrors 0 +2
  Abort
SectionEnd

Section "Python" SEC02
  ClearErrors
  File "${PYTHON_INSTALLER}"
  ExecWait '"msiexec" /i "$OUTDIR\${PYTHON_INSTALLER}" ALLUSERS=1 /passive' $0
  IfErrors onError
  Call installVirtualEnvOnPython
  IfErrors onError
  Call updatePythonPath
  IfErrors onError done
  onError:
    Abort
  done:
SectionEnd

Section "PyGtk" SEC03
  File "${PYGTK_INSTALLER}"
  ExecWait '"msiexec" /i "$OUTDIR\${PYGTK_INSTALLER}"'
  IfErrors 0 +2
    Abort
SectionEnd

SectionGroup /e "Diff tool" G1
  Section "Tkdiff" g1o1
    File "${TKDIFF_INSTALLER}"
    ExecWait '"cmd.exe" /K CD $OUTDIR & tkdiffInstall.exe && EXIT'
    IfErrors onError
    Call updateTkDiffPath
    IfErrors onError done
    onError:
    Abort
    done:
  SectionEnd
/*
  Section /o "WinMerge" g1o2
    File "${WINMERGE_INSTALLER}"
    ZipDLL::extractall "$OUTDIR\${WINMERGE_INSTALLER}" "$ROOT_DRIVE\"
    IfErrors onError
    Call updateWinMergePath
    IfErrors onError done
    onError:
    Abort
    done:
  SectionEnd
*/
SectionGroupEnd

!ifdef JEPPESEN
Section "TextTest and StoryText configuration" SEC06
  Call configureStorytextPython
  IfErrors onError
  Call installJython
  IfErrors onError
  Call configureStorytextJava
  IfErrors onError
  Call updateTexttestPath
  IfErrors onError done
  onError:
    Abort
  done:
SectionEnd
!else
Section "StoryText for Python GUI testing" SEC07
  Call configureStorytextPython
  IfErrors onError done
  onError:
    Abort
  done:
SectionEnd

Section "StoryText for Java GUI testing" SEC08
  Call installJython
  IfErrors onError
  Call configureStorytextJava
  IfErrors onError done
  onError:
    Abort
  done:
SectionEnd

Section "Texttest" SEC09
  ;SectionIn RO
  ZipDLL::extractall "$OUTDIR\${TEXTTEST_DIST}" "$INSTDIR"
  IfErrors onError
  Call updateTexttestPath
  IfErrors onError done
  onError:
    Abort
  done:
SectionEnd
!endif

Section "Uninstall"
  Call un.install
SectionEnd

Function initialize
  Call setup
  File "${VIRTUALENV_DIST}"
  File "texttest-icon-dynamic.ico"
  !ifndef JEPPESEN
    File "open_source\${TEXTTEST_DIST}"
  !endif
  !ifdef JEPPESEN
    writeUninstaller "$OUTDIR\Uninstall.exe"
  !else
    CreateDirectory "$INSTDIR"
    writeUninstaller "$INSTDIR\Uninstall.exe"
  !endif
  Call copyVirtualEnvFiles
FunctionEnd

Function copyVirtualEnvFiles
  CreateDirectory "$VIRTUALENV_PATH"
  IfErrors onError
  CopyFiles /SILENT "$OUTDIR\${VIRTUALENV_DIST}" $VIRTUALENV_PATH
  IfErrors onError done
  onError:
    Abort
  done:
FunctionEnd

Function installJython
  File "${JYTHON_INSTALLER}"
  Call checkJava
  ExecWait '$JAVA_EXE -jar $OUTDIR\${JYTHON_INSTALLER} -s -d "$JYTHON_PATH"'
  IfErrors onError
  Call installVirtualEnvOnJython
  IfErrors onError
  Call updateJythonPath
  IfErrors onError done
  onError:
    Abort
  done:
FunctionEnd

Function .onInstSuccess
  Call setTexttestHome
FunctionEnd

Function setTexttestHome
  IfFileExists "$TT_HOME\*.*" done
    CreateDirectory "$TT_HOME"
  done:
    WriteRegStr ${env_hkcu} "TEXTTEST_HOME" $TT_HOME
FunctionEnd

Function updateTexttestPath
  !ifdef JEPPESEN
    ${EnvVarUpdate} $0 "PATH" "P" "HKCU" "${CENTRAL_STORYTEXT_LOCATION}\bin"
    ${EnvVarUpdate} $0 "PATH" "P" "HKCU" "${CENTRAL_TEXTTEST_LOCATION}\bin"
  !else
    ${EnvVarUpdate} $0 "PATH" "P" "HKCU" "$INSTDIR\${TEXTTEST_ROOT}\${TT_BIN}"
  !endif
FunctionEnd

Function updatePythonPath
  ${EnvVarUpdate} $0 "PATH" "P" "HKCU" "$VIRTUALENV_PATH\${VIRTUAL_PYTHON}\bin"
  ${EnvVarUpdate} $0 "PATH" "P" "HKCU" "$VIRTUALENV_PATH\${VIRTUAL_PYTHON}\Scripts"
FunctionEnd

Function updateJythonPath
  ${EnvVarUpdate} $0 "PATH" "P" "HKCU" "$VIRTUALENV_PATH\${VIRTUAL_JYTHON}\bin"
FunctionEnd

Function updateTkDiffPath
  ${EnvVarUpdate} $0 "PATH" "P" "HKCU" "$TKDIFF_PATH"
FunctionEnd

/*
Function updateWinMergePath
  ${EnvVarUpdate} $0 "PATH" "P" "HKCU" "$WINMERGE_PATH"
FunctionEnd
*/

Function configureStorytextPython
  IfFileExists "$VIRTUALENV_PATH\${VIRTUAL_PYTHON}\*.*" install
  Call installVirtualEnvOnPython
  IfErrors 0 install
  MessageBox MB_OK|MB_ICONSTOP "Failed to install virtual environment on Python."
  Quit
  install:
  !ifdef JEPPESEN
    ExecWait '"cmd.exe" /K CD $VIRTUALENV_PATH & ECHO Configuring storytext on python & ${VIRTUAL_PYTHON}\Scripts\pip install -e ${CENTRAL_STORYTEXT_LOCATION} & EXIT'
    IfErrors onError done
  !else
    ExecWait '"cmd.exe" /K CD $VIRTUALENV_PATH & ECHO Configuring storytext on python & ${VIRTUAL_PYTHON}\Scripts\pip install storytext & EXIT'
    IfErrors onError done
  !endif
  onError:
    MessageBox MB_OK|MB_ICONSTOP "Failed to install StoryText on Python."
    Quit
  done:
FunctionEnd

Function configureStorytextJava
  !ifdef JEPPESEN
    ExecWait '"cmd.exe" /K CD $VIRTUALENV_PATH & ECHO Configuring storytext on jython & ${VIRTUAL_JYTHON}\bin\jython ${VIRTUAL_JYTHON}\bin\pip install -e ${CENTRAL_STORYTEXT_LOCATION} && EXIT'
    IfErrors onError done
  !else
    ;ExecWait '"cmd.exe" /K CD $VIRTUALENV_PATH & ECHO Configuring storytext on jython & ${VIRTUAL_JYTHON}\bin\jython ${VIRTUAL_JYTHON}\bin\pip install storytext && EXIT'
    ExecWait '"cmd.exe" /K CD $VIRTUALENV_PATH & ECHO Configuring storytext on jython & ${VIRTUAL_JYTHON}\bin\jython ${VIRTUAL_JYTHON}\bin\easy_install storytext && EXIT'
    IfErrors onError done
  !endif
  onError:
    Abort
  done:
FunctionEnd

Function checkPythonPath
  ReadRegStr $PYTHON_PATH HKCU "SOFTWARE\Python\PythonCore\${PYTHON_VERSION}\InstallPath" ""
  IfErrors 0 done
  ClearErrors
  ReadRegStr $PYTHON_PATH HKLM "SOFTWARE\Python\PythonCore\${PYTHON_VERSION}\InstallPath" ""
  IfErrors onError done
  onError:
    MessageBox MB_OK|MB_ICONSTOP "Python is not installed. Run the installer again and choose Python"
    Quit
  done:
FunctionEnd

Function checkJava
  ; Check if it's already in path
  StrCpy $JAVA_EXE "java"
  ExecWait '"cmd.exe" /K java -version & EXIT'
  IfErrors checkJavaHome done
  ; Check for JAVA_HOME
  checkJavaHome:
    ClearErrors
    ReadEnvStr $R0 "JAVA_HOME"
    StrCpy $JAVA_EXE "$R0\bin\java.exe"
    IfErrors checkRegistry
    IfFileExists $JAVA_EXE done checkRegistry

  ; Check for registry
  checkRegistry:
    ClearErrors
    ReadRegStr $R1 HKLM "SOFTWARE\JavaSoft\Java Runtime Environment" "CurrentVersion"
    ReadRegStr $R0 HKLM "SOFTWARE\JavaSoft\Java Runtime Environment\$R1" "JavaHome"
    StrCpy $JAVA_EXE "$R0\bin\java.exe"
    IfErrors onError done
  onError:
    MessageBox MB_OK|MB_ICONSTOP "Java is not installed. It must be present in order to install StoryText for java."
    Quit
  done:
FunctionEnd

Function installVirtualEnvOnPython
  Call checkPythonPath
  ExecWait '"cmd.exe" /K CD $VIRTUALENV_PATH & ECHO installing virtualenv on python & "$PYTHON_PATH"python virtualenv.py ${VIRTUAL_PYTHON} && EXIT'
Functionend

Function installVirtualEnvOnJython
  ;ExecWait '"cmd.exe" /K CD $VIRTUALENV_PATH & ECHO installing virtualenv on jython & "$PYTHON_PATH"python virtualenv.py -p $JYTHON_PATH\bin\jython.bat ${VIRTUAL_JYTHON} && EXIT'
  ExecWait '"cmd.exe" /K CD $VIRTUALENV_PATH & ECHO installing virtualenv on jython & $JYTHON_PATH\bin\jython virtualenv.py ${VIRTUAL_JYTHON} && EXIT'
Functionend

Function makeShortcuts
  CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"
  !ifdef JEPPESEN
    CreateShortcut "$SMPROGRAMS\${PRODUCT_NAME}\${PRODUCT_NAME}.lnk" "${CENTRAL_TEXTTEST_LOCATION}\bin\texttest.py" \
    "" "$OUTDIR\texttest-icon-dynamic.ico" ""
    CreateShortcut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$OUTDIR\Uninstall.exe"
    CreateShortcut "$DESKTOP\${PRODUCT_NAME}.lnk" "${CENTRAL_TEXTTEST_LOCATION}\bin\texttest.py" "" "$OUTDIR\texttest-icon-dynamic.ico" ""
  !else
    CreateShortcut "$SMPROGRAMS\${PRODUCT_NAME}\${PRODUCT_NAME}.lnk" "$INSTDIR\${TEXTTEST_ROOT}\${TT_BIN}\texttest.py" "" "$OUTDIR\texttest-icon-dynamic.ico" ""
    CreateShortcut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$INSTDIR\Uninstall.exe"
    CreateShortcut "$DESKTOP\${PRODUCT_NAME}.lnk" "$INSTDIR\${TEXTTEST_ROOT}\${TT_BIN}\texttest.py" "" "$OUTDIR\texttest-icon-dynamic.ico" ""
  !endif
FunctionEnd

Function .onInit
  StrCpy $1 ${g1o1}
FunctionEnd
; ============== Uninstall fuctions ========================
Function un.install
  Call un.setup
  RMDir /r "$JYTHON_PATH"
  RMDir /r "$OUTDIR"
  RMDir /r $VIRTUALENV_PATH
  RMDir /r $SMPROGRAMS\${PRODUCT_NAME}
  Delete "$DESKTOP\${PRODUCT_NAME}.lnk"
  Call un.setEnv
  Delete "$INSTDIR\Uninstall.exe"
FunctionEnd

Function un.setEnv
  DeleteRegKey "HKCU" "Environment\TEXTTEST_HOME"
  !ifdef JEPPESEN
    ${un.EnvVarUpdate} $0 "PATH" "R" "HKCU" "${CENTRAL_STORYTEXT_LOCATION}\bin"
    ${un.EnvVarUpdate} $0 "PATH" "R" "HKCU" "${CENTRAL_TEXTTEST_LOCATION}\bin"
  !else
    ${un.EnvVarUpdate} $0 "PATH" "R" "HKCU" "$INSTDIR\${TEXTTEST_ROOT}\${TT_BIN}"
  !endif
  ${un.EnvVarUpdate} $0 "PATH" "R" "HKCU" "$VIRTUALENV_PATH\${VIRTUAL_PYTHON}\bin"
  ${un.EnvVarUpdate} $0 "PATH" "R" "HKCU" "$VIRTUALENV_PATH\${VIRTUAL_PYTHON}\Scripts"
  ${un.EnvVarUpdate} $0 "PATH" "R" "HKCU" "$VIRTUALENV_PATH\${VIRTUAL_JYTHON}\bin"
  ${un.EnvVarUpdate} $0 "PATH" "R" "HKCU" "$TKDIFF_PATH"
  ;${un.EnvVarUpdate} $0 "PATH" "R" "HKCU" "$WINMERGE_PATH"
FunctionEnd


/*
Function .onSelChange
  !insertmacro StartRadioButtons $1
    !insertmacro RadioButton ${g1o1}
    !insertmacro RadioButton ${g1o2}
  !insertmacro EndRadioButtons
FunctionEnd
*/
